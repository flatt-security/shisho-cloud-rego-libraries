# - This code was generated by Shisho Cloud's internal system (protoc-gen-regolib).
# - When you find something to improve, you can create an GitHub issue, instead of creating pull requests.

package shisho.decision.source

import data.shisho

# @title Manage sources with a version control system
# You can emit this decision as follows:
# 
# ```
# import data.shisho
# 
# decisions[d] {
#   # the target of the decision (e.g. a GitHub repository, etc.)
#   subject := "test"
#
#   # whether the target is allowed by this policy or not
#   allowed := true
#
#   # See the following for further information:
#   # ja: https:/shisho.dev/docs/g/api/graphql-schema
#   # en: https:/shisho.dev/docs/ja/g/api/graphql-schema
#   policyReportId := "..."
#
#   # evidence for the decision
#   entries := [
#     shisho.decision.source.version_control_entry_v2(policyReportId, {
#       "type": type,
#     }),
#   ]
#
#   d := shisho.decision.source.version_control({
#     "allowed": allowed
#     "subject": subject,
#     "entries": entries,
#   })
# }
# ```

# METADATA
# title: "decision.api.shisho.dev/v1beta:version_control"
# scope: "rule"
# description: |
#   Emits a decision whose type is decision.api.shisho.dev/v1beta:version_control".
version_control(d) = x {
	x := {
		"header": version_control_header({
			"allowed": d.allowed,
			"subject": d.subject,
		}),
		"entries": d.entries,
	}
}

version_control_kind = "version_control"

version_control_header(h) = x {
	x := {
		"api_version": "decision.api.shisho.dev/v1beta",
		"kind": version_control_kind,
		"subject": h.subject,
		"labels": {},
		"annotations": {
			"decision.api.shisho.dev:ssc/category": "source",
			"decision.api.shisho.dev:ssc/cis-benchmark/v1.0": "1.1.1",
		},
		"type": shisho.decision.as_decision_type(h.allowed),
	}
}

# METADATA
# title: "Entry of decision.api.shisho.dev/v1beta:version_control"
# scope: "rule"
# description: "Emits a decision entry describing the detail of a decision decision.api.shisho.dev/v1beta:version_control"
version_control_entry(report_id, type) = x {
	x := {
		"severity": 0,
		"resource_id": shisho.decision.as_resource_id(report_id),
		"data": json.marshal({"type": type}),
	}
}

# METADATA
# title: "Entry of decision.api.shisho.dev/v1beta:version_control"
# scope: "rule"
# description: |
#   Emits a decision entry describing the detail of a decision decision.api.shisho.dev/v1beta:version_control
#
#   The parameter `data` is an object with the following fields: 
#   - type: string
#
#   For instance:
#   ```rego
#   {
#     type: "dummy",
#   }
#   ```
version_control_entry_v2(report_id, edata) = x {
	x := {
		"severity": 0,
		"resource_id": shisho.decision.as_resource_id(report_id),
		"data": json.marshal(edata),
	}
}

# METADATA
# title: "decision.api.shisho.dev/v1beta:version_control"
# scope: "rule"
# description: |
#   Emits a decision entry describing the detail of a decision decision.api.shisho.dev/v1beta:version_control with a specified severity.
#   Visit decision/decision.rego to see all the severities.
version_control_entry_with_severity(report_id, severity, type) = x {
	x := {
		"severity": severity,
		"resource_id": shisho.decision.as_resource_id(report_id),
		"data": json.marshal({"type": type}),
	}
}

# METADATA
# title: "decision.api.shisho.dev/v1beta:version_control"
# scope: "rule"
# description: |
#   Emits a decision entry describing the detail of a decision decision.api.shisho.dev/v1beta:version_control with a specified severity.
#   Visit decision/decision.rego to see all the severities.
version_control_entry_v2_with_severity(report_id, severity, edata) = x {
	x := {
		"severity": severity,
		"resource_id": shisho.decision.as_resource_id(report_id),
		"data": json.marshal(edata),
	}
}
